{"id":33,"data":{"html":"<!DOCTYPE html>\n<html style=\"font-size: 16px;\"><head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta charset=\"utf-8\">\n    <meta name=\"keywords\" content=\"Japan Travel, INTUITIVE\"><meta name=\"description\" content=\"\"><meta name=\"page_type\" content=\"np-template-header-footer-from-theme\">\n    <title></title>\n    <link rel=\"stylesheet\" href=\"nicepage.css\" media=\"screen\">\n    <script class=\"u-script\" type=\"text/javascript\" src=\"jquery.js\" defer=\"\"></script>\n    <script class=\"u-script\" type=\"text/javascript\" src=\"nicepage.js\" defer=\"\"></script>\n<meta name=\"generator\" content=\"Nicepage 7.9.4, nicepage.com\"><link rel=\"stylesheet\" data-font=\"Poppins:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i\" href=\"https://fonts.googleapis.com/css?family=Poppins:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i\"></head>\n<body class=\"u-body u-xl-mode\" data-style=\"blank\" data-posts=\"\" data-global-section-properties=\"{&quot;colorings&quot;:{&quot;light&quot;:[&quot;clean&quot;],&quot;colored&quot;:[&quot;clean&quot;],&quot;dark&quot;:[&quot;dark&quot;]}}\" data-source=\"blank\" data-password=\"\" data-lang=\"en\" data-page-sections-style=\"[{&quot;name&quot;:&quot;blank&quot;}]\" data-page-coloring-types=\"{&quot;light&quot;:[&quot;clean&quot;],&quot;colored&quot;:[&quot;clean&quot;],&quot;dark&quot;:[&quot;dark&quot;]}\" data-page-category=\"&quot;Basic&quot;\" data-app-version=\"7.9.4\">\n    <section class=\"u-align-left u-clearfix u-container-align-left u-gradient u-image u-block-1de9-1\" custom-posts-hash=\"[I,T]\" data-section-properties=\"{&quot;margin&quot;:&quot;none&quot;,&quot;stretch&quot;:true}\" data-id=\"1de9\" data-post-id=\"685123684\" data-style=\"intro-center-bottom-dark-v2\" id=\"block-4\" data-outline-name=\"Block 4\" data-source=\"Sketch\" data-image-width=\"4672\" data-image-height=\"7008\" data-background=\"[{&quot;id&quot;:&quot;f7e4&quot;,&quot;type&quot;:&quot;gradient&quot;,&quot;opacity&quot;:0.5,&quot;stops&quot;:[{&quot;opacity&quot;:1},{&quot;opacity&quot;:1}]},{&quot;id&quot;:&quot;2764&quot;,&quot;type&quot;:&quot;image&quot;,&quot;height&quot;:7008,&quot;width&quot;:4672}]\">\n      <div class=\"u-clearfix u-sheet u-valign-middle-lg u-valign-middle-md u-valign-middle-sm u-valign-middle-xs u-block-1de9-2\">\n        <h1 class=\"u-align-left u-custom-font u-text u-text-default u-text-palette-4-light-3 u-title u-block-1de9-3\"> Explore the Japan with Us</h1>\n        <p class=\"u-align-left u-large-text u-text u-text-palette-4-light-3 u-text-variant u-block-1de9-4\"> &nbsp; Find your dream destination</p>\n        <div class=\"custom-expanded u-border-3 u-border-grey-40 u-container-style u-group u-block-1de9-5\">\n          <div class=\"u-container-layout u-block-1de9-6\">\n            \n          <div class=\"u-clearfix u-custom-html u-expanded-width u-block-1de9-7\">[tours_list_filtered]\n</div></div>\n        </div>\n      </div>\n      <style data-mode=\"XL\">@media (min-width: 1200px) {\n  .u-block-1de9-1 {\n    background-image: linear-gradient(to bottom, rgba(var(--palette-1-base-r), var(--palette-1-base-g), var(--palette-1-base-b), 0.5), rgba(var(--palette-2-base-r), var(--palette-2-base-g), var(--palette-2-base-b), 0.5)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-santesson89-30970621.jpg');\n    background-position: 50% 50%, 50% 50%;\n    background-size: cover, cover;\n    background-repeat: no-repeat, no-repeat;\n  }\n  .u-block-1de9-2 {\n    min-height: 800px;\n  }\n  .u-block-1de9-3 {\n    font-family: Poppins;\n    font-size: 5rem;\n    font-weight: 700;\n    margin-top: 268px;\n    margin-right: 16px;\n    margin-bottom: 0;\n    margin-left: auto;\n  }\n  .u-block-1de9-4 {\n    font-size: 1.875rem;\n    margin-top: 20px;\n    margin-right: 285px;\n    margin-bottom: 0;\n    margin-left: 57px;\n  }\n  .u-block-1de9-5 {\n    width: 1026px;\n    min-height: 99px;\n    height: auto;\n    margin-top: 27px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 60px;\n  }\n  .u-block-1de9-6 {\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-1de9-7 {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n}</style>\n      <style data-mode=\"LG\">@media (max-width: 1199px) and (min-width: 992px) {\n  .u-block-1de9-1 {\n    background-image: linear-gradient(to bottom, rgba(var(--palette-1-base-r), var(--palette-1-base-g), var(--palette-1-base-b), 0.5), rgba(var(--palette-2-base-r), var(--palette-2-base-g), var(--palette-2-base-b), 0.5)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-santesson89-30970621.jpg');\n    background-position: 50% 50%, 50% 50%;\n    background-size: cover, cover;\n    background-repeat: no-repeat, no-repeat;\n  }\n  .u-block-1de9-2 {\n    min-height: 660px;\n  }\n  .u-block-1de9-3 {\n    font-family: Poppins;\n    font-size: 4.5rem;\n    font-weight: 700;\n    margin-top: 60px;\n    margin-right: 16px;\n    margin-bottom: 0;\n    margin-left: auto;\n  }\n  .u-block-1de9-4 {\n    font-size: 1.875rem;\n    margin-top: 20px;\n    margin-right: 142px;\n    margin-bottom: 0;\n    margin-left: 0;\n  }\n  .u-block-1de9-5 {\n    width: 940px;\n    margin-top: 27px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 60px;\n    min-height: 99px;\n  }\n  .u-block-1de9-6 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-1de9-7 {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n}</style>\n      <style data-mode=\"MD\">@media (max-width: 991px) and (min-width: 768px) {\n  .u-block-1de9-1 {\n    background-image: linear-gradient(to bottom, rgba(var(--palette-1-base-r), var(--palette-1-base-g), var(--palette-1-base-b), 0.5), rgba(var(--palette-2-base-r), var(--palette-2-base-g), var(--palette-2-base-b), 0.5)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-santesson89-30970621.jpg');\n    background-position: 50% 50%, 50% 50%;\n    background-size: cover, cover;\n    background-repeat: no-repeat, no-repeat;\n  }\n  .u-block-1de9-2 {\n    min-height: 506px;\n  }\n  .u-block-1de9-3 {\n    font-family: Poppins;\n    font-size: 4.5rem;\n    font-weight: 700;\n    margin-top: 60px;\n    margin-right: 16px;\n    margin-bottom: 0;\n    margin-left: auto;\n  }\n  .u-block-1de9-4 {\n    font-size: 1.875rem;\n    margin-top: 20px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n  }\n  .u-block-1de9-5 {\n    width: 720px;\n    margin-top: 27px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 60px;\n    min-height: 99px;\n  }\n  .u-block-1de9-6 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-1de9-7 {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n}</style>\n      <style data-mode=\"SM\">@media (max-width: 767px) and (min-width: 576px) {\n  .u-block-1de9-1 {\n    background-image: linear-gradient(to bottom, rgba(var(--palette-1-base-r), var(--palette-1-base-g), var(--palette-1-base-b), 0.5), rgba(var(--palette-2-base-r), var(--palette-2-base-g), var(--palette-2-base-b), 0.5)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-santesson89-30970621.jpg');\n    background-position: 50% 50%, 50% 50%;\n    background-size: cover, cover;\n    background-repeat: no-repeat, no-repeat;\n  }\n  .u-block-1de9-2 {\n    min-height: 380px;\n  }\n  .u-block-1de9-3 {\n    font-family: Poppins;\n    font-size: 3.75rem;\n    font-weight: 700;\n    margin-top: 60px;\n    margin-right: 16px;\n    margin-bottom: 0;\n    margin-left: auto;\n  }\n  .u-block-1de9-4 {\n    font-size: 1.875rem;\n    margin-top: 20px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n  }\n  .u-block-1de9-5 {\n    width: 540px;\n    margin-top: 27px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 60px;\n    min-height: 99px;\n  }\n  .u-block-1de9-6 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-1de9-7 {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n}</style>\n      <style data-mode=\"XS\">@media (max-width: 575px) {\n  .u-block-1de9-1 {\n    background-image: linear-gradient(to bottom, rgba(var(--palette-1-base-r), var(--palette-1-base-g), var(--palette-1-base-b), 0.5), rgba(var(--palette-2-base-r), var(--palette-2-base-g), var(--palette-2-base-b), 0.5)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-santesson89-30970621.jpg');\n    background-position: 50% 50%, 50% 50%;\n    background-size: cover, cover;\n    background-repeat: no-repeat, no-repeat;\n  }\n  .u-block-1de9-2 {\n    min-height: 239px;\n  }\n  .u-block-1de9-3 {\n    font-family: Poppins;\n    font-size: 3rem;\n    font-weight: 700;\n    margin-top: 60px;\n    margin-right: 16px;\n    margin-bottom: 0;\n    margin-left: auto;\n  }\n  .u-block-1de9-4 {\n    font-size: 1.875rem;\n    margin-top: 20px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n  }\n  .u-block-1de9-5 {\n    width: 340px;\n    margin-top: 27px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 60px;\n    min-height: 99px;\n  }\n  .u-block-1de9-6 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-1de9-7 {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n}</style>\n    </section>\n    <section class=\"u-clearfix u-container-align-center u-custom-color-2 u-block-f0e2-1\" custom-posts-hash=\"[[I,T],[I,T],[I,T]]\" data-post-id=\"2300667477;2300667477;2300667477\" data-section-properties=\"{&quot;stretch&quot;:true}\" data-id=\"f0e2\" data-style=\"list-image-bg-3-cols\" id=\"sec-0985\" data-source=\"functional_fix\">\n      <div class=\"u-clearfix u-sheet u-valign-middle-lg u-valign-middle-md u-valign-middle-sm u-valign-middle-xs u-block-f0e2-2\">\n        <p class=\"u-align-center u-custom-font u-font-playfair-display u-text u-text-default u-text-palette-5-light-1 u-block-f0e2-69\">Name Specials</p>\n        <h2 class=\"u-align-center u-custom-font u-font-playfair-display u-text u-text-default u-block-f0e2-20\" data-animation-name=\"customAnimationIn\" data-animation-duration=\"1500\" data-animation-delay=\"0\" data-hover-preset-name=\"zoomIn\"> Why Travel with Name?</h2>\n        <div class=\"u-expanded-width u-list u-block-f0e2-7\">\n          <div class=\"u-repeater u-block-f0e2-19\">\n            <div class=\"u-align-center u-border-2 u-border-grey-75 u-container-align-center u-container-style u-list-item u-radius u-repeater-item u-shape-round u-white u-block-f0e2-8\" data-hover-preset-name=\"flipIn\" data-animation-name=\"flipIn\" data-animation-duration=\"1500\" data-animation-direction=\"X\" data-animation-delay=\"500\">\n              <div class=\"u-container-layout u-similar-container u-valign-top-lg u-valign-top-md u-valign-top-sm u-valign-top-xs u-block-f0e2-9\">\n                <img class=\"u-expanded-width u-image u-image-round u-radius u-block-f0e2-53\" src=\"http://localhost/tours/wp-content/uploads/2025/06/pexels-njeromin-32649679.jpg\" data-image-width=\"3627\" data-image-height=\"5548\" data-brightness=\"\">\n                <h4 class=\"u-custom-font u-font-georgia u-text u-block-f0e2-24\">2000 + Our Guide </h4>\n              </div>\n            </div>\n            <div class=\"u-align-center u-border-2 u-border-grey-75 u-container-align-center u-container-style u-list-item u-radius u-repeater-item u-shape-round u-white u-block-f0e2-13\" data-hover-preset-name=\"flipIn\" data-animation-name=\"flipIn\" data-animation-duration=\"1500\" data-animation-direction=\"X\" data-animation-delay=\"500\">\n              <div class=\"u-container-layout u-similar-container u-valign-top-lg u-valign-top-md u-valign-top-sm u-valign-top-xs u-block-f0e2-14\">\n                <img class=\"u-expanded-width u-image u-image-round u-radius u-block-f0e2-54\" src=\"http://localhost/tours/wp-content/uploads/2025/06/pexels-d-ng-nhan-324384-29914717.jpg\" data-image-width=\"3258\" data-image-height=\"4895\" data-brightness=\"\">\n                <h4 class=\"u-custom-font u-font-georgia u-text u-block-f0e2-28\">100 Users Trusted Tour Agency </h4>\n              </div>\n            </div>\n            <div class=\"u-align-center u-border-2 u-border-grey-75 u-container-align-center u-container-style u-list-item u-radius u-repeater-item u-shape-round u-white u-block-f0e2-16\" data-hover-preset-name=\"flipIn\" data-animation-name=\"flipIn\" data-animation-duration=\"1500\" data-animation-direction=\"X\" data-animation-delay=\"500\">\n              <div class=\"u-container-layout u-similar-container u-valign-top-lg u-valign-top-md u-valign-top-sm u-valign-top-xs u-block-f0e2-17\">\n                <img class=\"u-expanded-width u-image u-image-round u-radius u-block-f0e2-55\" src=\"http://localhost/tours/wp-content/uploads/2025/06/pexels-d-ng-nhan-324384-29914687.jpg\" data-image-width=\"3280\" data-image-height=\"4928\" data-brightness=\"\">\n                <h4 class=\"u-custom-font u-font-georgia u-text u-block-f0e2-32\">20 + years of Travel Experince</h4>\n              </div>\n            </div>\n            <div class=\"u-align-center u-border-2 u-border-grey-75 u-container-align-center u-container-style u-list-item u-radius u-repeater-item u-shape-round u-white u-block-f0e2-33\" data-hover-preset-name=\"flipIn\" data-animation-name=\"flipIn\" data-animation-duration=\"1500\" data-animation-direction=\"X\" data-animation-delay=\"500\">\n              <div class=\"u-container-layout u-similar-container u-valign-top-lg u-valign-top-md u-valign-top-sm u-valign-top-xs u-block-f0e2-34\">\n                <img class=\"u-expanded-width u-image u-image-round u-radius u-block-f0e2-56\" src=\"http://localhost/tours/wp-content/uploads/2025/06/pexels-d-ng-nhan-324384-29914707.jpg\" data-image-width=\"3280\" data-image-height=\"4928\" data-brightness=\"\">\n                <h4 class=\"u-custom-font u-font-georgia u-text u-block-f0e2-38\">100 of our Travelers are Happy</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <style data-mode=\"XL\">@media (min-width: 1200px) {\n  .u-block-f0e2-2 {\n    min-height: 746px;\n  }\n  .u-block-f0e2-69 {\n    text-transform: uppercase;\n    margin-top: 69px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-20 {\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 0.3;\n    font-weight: 700;\n    margin-top: 8px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-7 {\n    margin-top: 62px;\n    margin-bottom: 60px;\n    grid-template-rows: repeat(1, auto);\n  }\n  .u-block-f0e2-19 {\n    grid-template-columns: repeat(4, calc(25% - 20.25px));\n    min-height: 420px;\n    grid-auto-columns: calc(25% - 20.25px);\n    --gap: 27px;\n  }\n  .u-block-f0e2-8 {\n    --radius: 25px;\n    background-image: none;\n  }\n  .u-block-f0e2-9 {\n    padding-top: 0;\n    padding-bottom: 0;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-f0e2-53 {\n    height: 308px;\n    margin-top: 0;\n    margin-bottom: 0;\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    filter: brightness(0.9);\n  }\n  .u-block-f0e2-24 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-13 {\n    --radius: 25px;\n    background-image: none;\n  }\n  .u-block-f0e2-14 {\n    padding-top: 0;\n    padding-bottom: 0;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-f0e2-54 {\n    height: 308px;\n    margin-top: 0;\n    margin-bottom: 0;\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    filter: brightness(0.9);\n  }\n  .u-block-f0e2-28 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-16 {\n    --radius: 25px;\n    background-image: none;\n  }\n  .u-block-f0e2-17 {\n    padding-top: 0;\n    padding-bottom: 0;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-f0e2-55 {\n    height: 308px;\n    margin-top: 0;\n    margin-bottom: 0;\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    filter: brightness(0.9);\n  }\n  .u-block-f0e2-32 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-33 {\n    --radius: 25px;\n    background-image: none;\n  }\n  .u-block-f0e2-34 {\n    padding-top: 0;\n    padding-bottom: 0;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-f0e2-56 {\n    height: 308px;\n    margin-top: 0;\n    margin-bottom: 0;\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    filter: brightness(0.9);\n  }\n  .u-block-f0e2-38 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n}</style>\n      <style data-mode=\"LG\">@media (max-width: 1199px) and (min-width: 992px) {\n  .u-block-f0e2-2 {\n    min-height: 746px;\n  }\n  .u-block-f0e2-69 {\n    text-transform: uppercase;\n    margin-top: 162px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-20 {\n    margin-top: -28px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 0.3;\n    font-weight: 700;\n  }\n  .u-block-f0e2-7 {\n    margin-top: 62px;\n    margin-bottom: 60px;\n    grid-template-rows: repeat(1, auto);\n  }\n  .u-block-f0e2-19 {\n    grid-template-columns: repeat(4, calc(25% - 20.25px));\n    grid-auto-columns: calc(25% - 20.25px);\n    grid-gap: 27px;\n    min-height: 346px;\n    --gap: 27px;\n  }\n  .u-block-f0e2-8 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-9 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-53 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 254px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-24 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-13 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-14 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-54 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 254px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-28 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-16 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-17 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-55 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 254px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-32 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-33 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-34 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-56 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 254px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-38 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n}</style>\n      <style data-mode=\"MD\">@media (max-width: 991px) and (min-width: 768px) {\n  .u-block-f0e2-2 {\n    min-height: 746px;\n  }\n  .u-block-f0e2-69 {\n    text-transform: uppercase;\n    margin-top: 69px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-20 {\n    margin-top: 40px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 0.3;\n    font-weight: 700;\n  }\n  .u-block-f0e2-7 {\n    margin-top: 62px;\n    margin-bottom: 60px;\n    grid-template-rows: repeat(1, auto);\n  }\n  .u-block-f0e2-19 {\n    grid-template-columns: repeat(2, calc(50% - 13.5px));\n    grid-auto-columns: calc(50% - 13.5px);\n    grid-gap: 27px;\n    min-height: 1060px;\n    --gap: 27px;\n  }\n  .u-block-f0e2-8 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-9 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-53 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 389px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-24 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-13 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-14 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-54 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 389px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-28 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-16 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-17 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-55 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 389px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-32 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-33 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-34 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-56 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 389px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-38 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n}</style>\n      <style data-mode=\"SM\">@media (max-width: 767px) and (min-width: 576px) {\n  .u-block-f0e2-2 {\n    min-height: 746px;\n  }\n  .u-block-f0e2-69 {\n    text-transform: uppercase;\n    margin-top: 60px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-20 {\n    margin-top: 55px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 0.3;\n    font-weight: 700;\n  }\n  .u-block-f0e2-7 {\n    margin-top: 62px;\n    margin-bottom: 60px;\n    grid-template-rows: repeat(