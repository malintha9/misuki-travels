{"id":33,"data":{"html":"<!DOCTYPE html>\n<html style=\"font-size: 16px;\"><head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta charset=\"utf-8\">\n    <meta name=\"keywords\" content=\"Japan Travel, INTUITIVE\"><meta name=\"description\" content=\"\"><meta name=\"page_type\" content=\"np-template-header-footer-from-theme\">\n    <title></title>\n    <link rel=\"stylesheet\" href=\"nicepage.css\" media=\"screen\">\n    <script class=\"u-script\" type=\"text/javascript\" src=\"jquery.js\" defer=\"\"></script>\n    <script class=\"u-script\" type=\"text/javascript\" src=\"nicepage.js\" defer=\"\"></script>\n<meta name=\"generator\" content=\"Nicepage 7.9.4, nicepage.com\"><link rel=\"stylesheet\" data-font=\"Poppins:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i\" href=\"https://fonts.googleapis.com/css?family=Poppins:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i\"></head>\n<body class=\"u-body u-xl-mode\" data-style=\"blank\" data-posts=\"\" data-global-section-properties=\"{&quot;colorings&quot;:{&quot;light&quot;:[&quot;clean&quot;],&quot;colored&quot;:[&quot;clean&quot;],&quot;dark&quot;:[&quot;dark&quot;]}}\" data-source=\"blank\" data-password=\"\" data-lang=\"en\" data-page-sections-style=\"[{&quot;name&quot;:&quot;blank&quot;}]\" data-page-coloring-types=\"{&quot;light&quot;:[&quot;clean&quot;],&quot;colored&quot;:[&quot;clean&quot;],&quot;dark&quot;:[&quot;dark&quot;]}\" data-page-category=\"&quot;Basic&quot;\" data-app-version=\"7.9.4\">\n    <section class=\"u-align-left u-clearfix u-container-align-left u-gradient u-image u-block-1de9-1\" custom-posts-hash=\"[I,T]\" data-section-properties=\"{&quot;margin&quot;:&quot;none&quot;,&quot;stretch&quot;:true}\" data-id=\"1de9\" data-post-id=\"685123684\" data-style=\"intro-center-bottom-dark-v2\" id=\"block-4\" data-outline-name=\"Block 4\" data-source=\"Sketch\" data-image-width=\"4672\" data-image-height=\"7008\" data-background=\"[{&quot;id&quot;:&quot;f7e4&quot;,&quot;type&quot;:&quot;gradient&quot;,&quot;opacity&quot;:0.5,&quot;stops&quot;:[{&quot;opacity&quot;:1},{&quot;opacity&quot;:1}]},{&quot;id&quot;:&quot;2764&quot;,&quot;type&quot;:&quot;image&quot;,&quot;height&quot;:7008,&quot;width&quot;:4672}]\">\n      <div class=\"u-clearfix u-sheet u-valign-middle-lg u-valign-middle-md u-valign-middle-sm u-valign-middle-xs u-block-1de9-2\">\n        <h1 class=\"u-align-left u-custom-font u-text u-text-default u-text-palette-4-light-3 u-title u-block-1de9-3\"> Explore the Japan with Us</h1>\n        <p class=\"u-align-left u-large-text u-text u-text-palette-4-light-3 u-text-variant u-block-1de9-4\"> &nbsp; Find your dream destination</p>\n        <div class=\"custom-expanded u-border-3 u-border-grey-40 u-container-style u-group u-block-1de9-5\">\n          <div class=\"u-container-layout u-block-1de9-6\">\n            \n          <div class=\"u-clearfix u-custom-html u-expanded-width u-block-1de9-7\">[tours_list_filtered]\n</div></div>\n        </div>\n      </div>\n      <style data-mode=\"XL\">@media (min-width: 1200px) {\n  .u-block-1de9-1 {\n    background-image: linear-gradient(to bottom, rgba(var(--palette-1-base-r), var(--palette-1-base-g), var(--palette-1-base-b), 0.5), rgba(var(--palette-2-base-r), var(--palette-2-base-g), var(--palette-2-base-b), 0.5)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-santesson89-30970621.jpg');\n    background-position: 50% 50%, 50% 50%;\n    background-size: cover, cover;\n    background-repeat: no-repeat, no-repeat;\n  }\n  .u-block-1de9-2 {\n    min-height: 800px;\n  }\n  .u-block-1de9-3 {\n    font-family: Poppins;\n    font-size: 5rem;\n    font-weight: 700;\n    margin-top: 268px;\n    margin-right: 16px;\n    margin-bottom: 0;\n    margin-left: auto;\n  }\n  .u-block-1de9-4 {\n    font-size: 1.875rem;\n    margin-top: 20px;\n    margin-right: 285px;\n    margin-bottom: 0;\n    margin-left: 57px;\n  }\n  .u-block-1de9-5 {\n    width: 1026px;\n    min-height: 99px;\n    height: auto;\n    margin-top: 27px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 60px;\n  }\n  .u-block-1de9-6 {\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-1de9-7 {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n}</style>\n      <style data-mode=\"LG\">@media (max-width: 1199px) and (min-width: 992px) {\n  .u-block-1de9-1 {\n    background-image: linear-gradient(to bottom, rgba(var(--palette-1-base-r), var(--palette-1-base-g), var(--palette-1-base-b), 0.5), rgba(var(--palette-2-base-r), var(--palette-2-base-g), var(--palette-2-base-b), 0.5)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-santesson89-30970621.jpg');\n    background-position: 50% 50%, 50% 50%;\n    background-size: cover, cover;\n    background-repeat: no-repeat, no-repeat;\n  }\n  .u-block-1de9-2 {\n    min-height: 660px;\n  }\n  .u-block-1de9-3 {\n    font-family: Poppins;\n    font-size: 4.5rem;\n    font-weight: 700;\n    margin-top: 60px;\n    margin-right: 16px;\n    margin-bottom: 0;\n    margin-left: auto;\n  }\n  .u-block-1de9-4 {\n    font-size: 1.875rem;\n    margin-top: 20px;\n    margin-right: 142px;\n    margin-bottom: 0;\n    margin-left: 0;\n  }\n  .u-block-1de9-5 {\n    width: 940px;\n    margin-top: 27px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 60px;\n    min-height: 99px;\n  }\n  .u-block-1de9-6 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-1de9-7 {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n}</style>\n      <style data-mode=\"MD\">@media (max-width: 991px) and (min-width: 768px) {\n  .u-block-1de9-1 {\n    background-image: linear-gradient(to bottom, rgba(var(--palette-1-base-r), var(--palette-1-base-g), var(--palette-1-base-b), 0.5), rgba(var(--palette-2-base-r), var(--palette-2-base-g), var(--palette-2-base-b), 0.5)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-santesson89-30970621.jpg');\n    background-position: 50% 50%, 50% 50%;\n    background-size: cover, cover;\n    background-repeat: no-repeat, no-repeat;\n  }\n  .u-block-1de9-2 {\n    min-height: 506px;\n  }\n  .u-block-1de9-3 {\n    font-family: Poppins;\n    font-size: 4.5rem;\n    font-weight: 700;\n    margin-top: 60px;\n    margin-right: 16px;\n    margin-bottom: 0;\n    margin-left: auto;\n  }\n  .u-block-1de9-4 {\n    font-size: 1.875rem;\n    margin-top: 20px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n  }\n  .u-block-1de9-5 {\n    width: 720px;\n    margin-top: 27px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 60px;\n    min-height: 99px;\n  }\n  .u-block-1de9-6 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-1de9-7 {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n}</style>\n      <style data-mode=\"SM\">@media (max-width: 767px) and (min-width: 576px) {\n  .u-block-1de9-1 {\n    background-image: linear-gradient(to bottom, rgba(var(--palette-1-base-r), var(--palette-1-base-g), var(--palette-1-base-b), 0.5), rgba(var(--palette-2-base-r), var(--palette-2-base-g), var(--palette-2-base-b), 0.5)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-santesson89-30970621.jpg');\n    background-position: 50% 50%, 50% 50%;\n    background-size: cover, cover;\n    background-repeat: no-repeat, no-repeat;\n  }\n  .u-block-1de9-2 {\n    min-height: 380px;\n  }\n  .u-block-1de9-3 {\n    font-family: Poppins;\n    font-size: 3.75rem;\n    font-weight: 700;\n    margin-top: 60px;\n    margin-right: 16px;\n    margin-bottom: 0;\n    margin-left: auto;\n  }\n  .u-block-1de9-4 {\n    font-size: 1.875rem;\n    margin-top: 20px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n  }\n  .u-block-1de9-5 {\n    width: 540px;\n    margin-top: 27px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 60px;\n    min-height: 99px;\n  }\n  .u-block-1de9-6 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-1de9-7 {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n}</style>\n      <style data-mode=\"XS\">@media (max-width: 575px) {\n  .u-block-1de9-1 {\n    background-image: linear-gradient(to bottom, rgba(var(--palette-1-base-r), var(--palette-1-base-g), var(--palette-1-base-b), 0.5), rgba(var(--palette-2-base-r), var(--palette-2-base-g), var(--palette-2-base-b), 0.5)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-santesson89-30970621.jpg');\n    background-position: 50% 50%, 50% 50%;\n    background-size: cover, cover;\n    background-repeat: no-repeat, no-repeat;\n  }\n  .u-block-1de9-2 {\n    min-height: 239px;\n  }\n  .u-block-1de9-3 {\n    font-family: Poppins;\n    font-size: 3rem;\n    font-weight: 700;\n    margin-top: 60px;\n    margin-right: 16px;\n    margin-bottom: 0;\n    margin-left: auto;\n  }\n  .u-block-1de9-4 {\n    font-size: 1.875rem;\n    margin-top: 20px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n  }\n  .u-block-1de9-5 {\n    width: 340px;\n    margin-top: 27px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 60px;\n    min-height: 99px;\n  }\n  .u-block-1de9-6 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-1de9-7 {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n}</style>\n    </section>\n    <section class=\"u-clearfix u-container-align-center u-custom-color-2 u-block-f0e2-1\" custom-posts-hash=\"[[I,T],[I,T],[I,T]]\" data-post-id=\"2300667477;2300667477;2300667477\" data-section-properties=\"{&quot;stretch&quot;:true}\" data-id=\"f0e2\" data-style=\"list-image-bg-3-cols\" id=\"sec-0985\" data-source=\"functional_fix\">\n      <div class=\"u-clearfix u-sheet u-valign-middle-lg u-valign-middle-md u-valign-middle-sm u-valign-middle-xs u-block-f0e2-2\">\n        <p class=\"u-align-center u-custom-font u-font-playfair-display u-text u-text-default u-text-palette-5-light-1 u-block-f0e2-69\">Name Specials</p>\n        <h2 class=\"u-align-center u-custom-font u-font-playfair-display u-text u-text-default u-block-f0e2-20\" data-animation-name=\"customAnimationIn\" data-animation-duration=\"1500\" data-animation-delay=\"0\" data-hover-preset-name=\"zoomIn\"> Why Travel with Name?</h2>\n        <div class=\"u-expanded-width u-list u-block-f0e2-7\">\n          <div class=\"u-repeater u-block-f0e2-19\">\n            <div class=\"u-align-center u-border-2 u-border-grey-75 u-container-align-center u-container-style u-list-item u-radius u-repeater-item u-shape-round u-white u-block-f0e2-8\" data-hover-preset-name=\"flipIn\" data-animation-name=\"flipIn\" data-animation-duration=\"1500\" data-animation-direction=\"X\" data-animation-delay=\"500\">\n              <div class=\"u-container-layout u-similar-container u-valign-top-lg u-valign-top-md u-valign-top-sm u-valign-top-xs u-block-f0e2-9\">\n                <img class=\"u-expanded-width u-image u-image-round u-radius u-block-f0e2-53\" src=\"http://localhost/tours/wp-content/uploads/2025/06/pexels-njeromin-32649679.jpg\" data-image-width=\"3627\" data-image-height=\"5548\" data-brightness=\"\">\n                <h4 class=\"u-custom-font u-font-georgia u-text u-block-f0e2-24\">2000 + Our Guide </h4>\n              </div>\n            </div>\n            <div class=\"u-align-center u-border-2 u-border-grey-75 u-container-align-center u-container-style u-list-item u-radius u-repeater-item u-shape-round u-white u-block-f0e2-13\" data-hover-preset-name=\"flipIn\" data-animation-name=\"flipIn\" data-animation-duration=\"1500\" data-animation-direction=\"X\" data-animation-delay=\"500\">\n              <div class=\"u-container-layout u-similar-container u-valign-top-lg u-valign-top-md u-valign-top-sm u-valign-top-xs u-block-f0e2-14\">\n                <img class=\"u-expanded-width u-image u-image-round u-radius u-block-f0e2-54\" src=\"http://localhost/tours/wp-content/uploads/2025/06/pexels-d-ng-nhan-324384-29914717.jpg\" data-image-width=\"3258\" data-image-height=\"4895\" data-brightness=\"\">\n                <h4 class=\"u-custom-font u-font-georgia u-text u-block-f0e2-28\">100 Users Trusted Tour Agency </h4>\n              </div>\n            </div>\n            <div class=\"u-align-center u-border-2 u-border-grey-75 u-container-align-center u-container-style u-list-item u-radius u-repeater-item u-shape-round u-white u-block-f0e2-16\" data-hover-preset-name=\"flipIn\" data-animation-name=\"flipIn\" data-animation-duration=\"1500\" data-animation-direction=\"X\" data-animation-delay=\"500\">\n              <div class=\"u-container-layout u-similar-container u-valign-top-lg u-valign-top-md u-valign-top-sm u-valign-top-xs u-block-f0e2-17\">\n                <img class=\"u-expanded-width u-image u-image-round u-radius u-block-f0e2-55\" src=\"http://localhost/tours/wp-content/uploads/2025/06/pexels-d-ng-nhan-324384-29914687.jpg\" data-image-width=\"3280\" data-image-height=\"4928\" data-brightness=\"\">\n                <h4 class=\"u-custom-font u-font-georgia u-text u-block-f0e2-32\">20 + years of Travel Experince</h4>\n              </div>\n            </div>\n            <div class=\"u-align-center u-border-2 u-border-grey-75 u-container-align-center u-container-style u-list-item u-radius u-repeater-item u-shape-round u-white u-block-f0e2-33\" data-hover-preset-name=\"flipIn\" data-animation-name=\"flipIn\" data-animation-duration=\"1500\" data-animation-direction=\"X\" data-animation-delay=\"500\">\n              <div class=\"u-container-layout u-similar-container u-valign-top-lg u-valign-top-md u-valign-top-sm u-valign-top-xs u-block-f0e2-34\">\n                <img class=\"u-expanded-width u-image u-image-round u-radius u-block-f0e2-56\" src=\"http://localhost/tours/wp-content/uploads/2025/06/pexels-d-ng-nhan-324384-29914707.jpg\" data-image-width=\"3280\" data-image-height=\"4928\" data-brightness=\"\">\n                <h4 class=\"u-custom-font u-font-georgia u-text u-block-f0e2-38\">100 of our Travelers are Happy</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <style data-mode=\"XL\">@media (min-width: 1200px) {\n  .u-block-f0e2-2 {\n    min-height: 746px;\n  }\n  .u-block-f0e2-69 {\n    text-transform: uppercase;\n    margin-top: 69px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-20 {\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 0.3;\n    font-weight: 700;\n    margin-top: 8px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-7 {\n    margin-top: 62px;\n    margin-bottom: 60px;\n    grid-template-rows: repeat(1, auto);\n  }\n  .u-block-f0e2-19 {\n    grid-template-columns: repeat(4, calc(25% - 20.25px));\n    min-height: 420px;\n    grid-auto-columns: calc(25% - 20.25px);\n    --gap: 27px;\n  }\n  .u-block-f0e2-8 {\n    --radius: 25px;\n    background-image: none;\n  }\n  .u-block-f0e2-9 {\n    padding-top: 0;\n    padding-bottom: 0;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-f0e2-53 {\n    height: 308px;\n    margin-top: 0;\n    margin-bottom: 0;\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    filter: brightness(0.9);\n  }\n  .u-block-f0e2-24 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-13 {\n    --radius: 25px;\n    background-image: none;\n  }\n  .u-block-f0e2-14 {\n    padding-top: 0;\n    padding-bottom: 0;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-f0e2-54 {\n    height: 308px;\n    margin-top: 0;\n    margin-bottom: 0;\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    filter: brightness(0.9);\n  }\n  .u-block-f0e2-28 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-16 {\n    --radius: 25px;\n    background-image: none;\n  }\n  .u-block-f0e2-17 {\n    padding-top: 0;\n    padding-bottom: 0;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-f0e2-55 {\n    height: 308px;\n    margin-top: 0;\n    margin-bottom: 0;\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    filter: brightness(0.9);\n  }\n  .u-block-f0e2-32 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-33 {\n    --radius: 25px;\n    background-image: none;\n  }\n  .u-block-f0e2-34 {\n    padding-top: 0;\n    padding-bottom: 0;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-f0e2-56 {\n    height: 308px;\n    margin-top: 0;\n    margin-bottom: 0;\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    filter: brightness(0.9);\n  }\n  .u-block-f0e2-38 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n}</style>\n      <style data-mode=\"LG\">@media (max-width: 1199px) and (min-width: 992px) {\n  .u-block-f0e2-2 {\n    min-height: 746px;\n  }\n  .u-block-f0e2-69 {\n    text-transform: uppercase;\n    margin-top: 162px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-20 {\n    margin-top: -28px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 0.3;\n    font-weight: 700;\n  }\n  .u-block-f0e2-7 {\n    margin-top: 62px;\n    margin-bottom: 60px;\n    grid-template-rows: repeat(1, auto);\n  }\n  .u-block-f0e2-19 {\n    grid-template-columns: repeat(4, calc(25% - 20.25px));\n    grid-auto-columns: calc(25% - 20.25px);\n    grid-gap: 27px;\n    min-height: 346px;\n    --gap: 27px;\n  }\n  .u-block-f0e2-8 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-9 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-53 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 254px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-24 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-13 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-14 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-54 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 254px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-28 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-16 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-17 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-55 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 254px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-32 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-33 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-34 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-56 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 254px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-38 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n}</style>\n      <style data-mode=\"MD\">@media (max-width: 991px) and (min-width: 768px) {\n  .u-block-f0e2-2 {\n    min-height: 746px;\n  }\n  .u-block-f0e2-69 {\n    text-transform: uppercase;\n    margin-top: 69px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-20 {\n    margin-top: 40px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 0.3;\n    font-weight: 700;\n  }\n  .u-block-f0e2-7 {\n    margin-top: 62px;\n    margin-bottom: 60px;\n    grid-template-rows: repeat(1, auto);\n  }\n  .u-block-f0e2-19 {\n    grid-template-columns: repeat(2, calc(50% - 13.5px));\n    grid-auto-columns: calc(50% - 13.5px);\n    grid-gap: 27px;\n    min-height: 1060px;\n    --gap: 27px;\n  }\n  .u-block-f0e2-8 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-9 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-53 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 389px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-24 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-13 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-14 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-54 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 389px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-28 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-16 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-17 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-55 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 389px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-32 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-33 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-34 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-56 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 389px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-38 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n}</style>\n      <style data-mode=\"SM\">@media (max-width: 767px) and (min-width: 576px) {\n  .u-block-f0e2-2 {\n    min-height: 746px;\n  }\n  .u-block-f0e2-69 {\n    text-transform: uppercase;\n    margin-top: 60px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-20 {\n    margin-top: 55px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 0.3;\n    font-weight: 700;\n  }\n  .u-block-f0e2-7 {\n    margin-top: 62px;\n    margin-bottom: 60px;\n    grid-template-rows: repeat(1, auto);\n  }\n  .u-block-f0e2-19 {\n    grid-template-columns: 100%;\n    grid-auto-columns: calc(100% - 0px);\n    grid-gap: 27px;\n    min-height: 1060px;\n    --gap: 27px;\n  }\n  .u-block-f0e2-8 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-9 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-53 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 584px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-24 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-13 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-14 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-54 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 584px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-28 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-16 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-17 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-55 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 584px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-32 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-33 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-34 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-56 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 584px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-38 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n}</style>\n      <style data-mode=\"XS\">@media (max-width: 575px) {\n  .u-block-f0e2-2 {\n    min-height: 746px;\n  }\n  .u-block-f0e2-69 {\n    text-transform: uppercase;\n    margin-top: 60px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-20 {\n    margin-top: 55px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 0.3;\n    font-weight: 700;\n  }\n  .u-block-f0e2-7 {\n    margin-top: 62px;\n    margin-bottom: 60px;\n    grid-template-rows: repeat(1, auto);\n  }\n  .u-block-f0e2-19 {\n    grid-template-columns: 100%;\n    grid-auto-columns: 100%;\n    grid-gap: 27px;\n    min-height: 1060px;\n    --gap: 27px;\n  }\n  .u-block-f0e2-8 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-9 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-53 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 368px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-24 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-13 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-14 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-54 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 368px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-28 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-16 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-17 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-55 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 368px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-32 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-33 {\n    background-image: none;\n    --radius: 25px;\n  }\n  .u-block-f0e2-34 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-f0e2-56 {\n    filter: brightness(0.9);\n    --top-left-radius: 50px;\n    --top-right-radius: 50px;\n    height: 368px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .u-block-f0e2-38 {\n    font-size: 1.25rem;\n    font-weight: 700;\n    margin-top: 30px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n}</style>\n    </section>\n    <section class=\"u-clearfix u-block-3846-1\" custom-posts-hash=\"[]\" data-style=\"blank\" data-section-properties=\"{&quot;margin&quot;:&quot;none&quot;,&quot;stretch&quot;:true}\" id=\"sec-f9dd\" data-source=\"functional_fix\" data-id=\"3846\">\n      <div class=\"u-expanded-height-lg u-expanded-height-md u-expanded-height-xl u-expanded-width-sm u-expanded-width-xs u-palette-2-base u-shape u-shape-rectangle u-block-3846-17\"></div>\n      <div class=\"data-layout-selected u-clearfix u-layout-wrap u-block-3846-3\">\n        <div class=\"u-layout\">\n          <div class=\"u-layout-row\">\n            <div class=\"u-container-style u-layout-cell u-left-cell u-size-31 u-block-3846-4\">\n              <div class=\"u-container-layout u-valign-middle u-block-3846-5\">\n                <img src=\"http://localhost/tours/wp-content/uploads/2025/06/pexels-taryn-elliott-4340785.jpg\" alt=\"\" class=\"u-expanded-width-md u-expanded-width-sm u-expanded-width-xs u-image u-image-round u-radius u-block-3846-8\" data-image-width=\"3836\" data-image-height=\"2557\">\n              </div>\n            </div>\n            <div class=\"u-align-left u-container-align-left u-container-style u-layout-cell u-palette-2-base u-right-cell u-size-29 u-block-3846-6\">\n              <div class=\"u-container-layout u-valign-middle-lg u-valign-middle-md u-valign-middle-sm u-valign-middle-xs u-block-3846-7\">\n                <p class=\"u-custom-font u-font-playfair-display u-text u-text-palette-5-light-1 u-block-3846-21\" data-editor-hide-on=\"39dcbc6f-31f2-abae-4029-0869c2d2c071\">ABOUT TRAVIO </p>\n                <h2 class=\"u-text u-text-default u-block-3846-20\">Japan Best Travel Agency Company Since 2025.&nbsp;</h2>\n                <p class=\"u-text u-block-3846-11\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim.<br>\n                  <br>\n                  <br>\n                  <br>\n                </p>\n                <a href=\"#\" class=\"u-active-palette-2-light-1 u-border-3 u-border-active-palette-2-light-1 u-border-hover-palette-2-light-1 u-border-white u-btn u-btn-round u-button-style u-hover-palette-2-light-1 u-none u-radius-50 u-text-active-white u-text-body-alt-color u-text-hover-white u-block-3846-19\">Find&nbsp; tours </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <style data-mode=\"XL\" data-visited=\"true\">@media (min-width: 1200px) {\n  .u-block-3846-1 {\n    min-height: 866px;\n  }\n  .u-block-3846-17 {\n    width: calc(((100% - 1140px) / 2) + 699px);\n    background-image: none;\n    left: auto;\n    right: 0;\n  }\n  .u-block-3846-3 {\n    width: 1140px;\n    margin-top: 147px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: -42px;\n  }\n  .u-block-3846-4 {\n    min-height: 550px;\n  }\n  .u-block-3846-5 {\n    padding-top: 30px;\n    padding-right: 0;\n    padding-bottom: 30px;\n    padding-left: 30px;\n  }\n  .u-block-3846-8 {\n    width: 532px;\n    height: 490px;\n    object-position: 50% 52.16%;\n    box-shadow: 5px 5px 20px 0 rgba(var(--black-r),var(--black-g),var(--black-b),0.4);\n    --radius: 40px;\n    margin-top: 0;\n    margin-right: 27px;\n    margin-bottom: 0;\n    margin-left: auto;\n  }\n  .u-block-3846-6 {\n    min-height: 761px;\n    background-image: none;\n  }\n  .u-block-3846-7 {\n    padding-top: 30px;\n    padding-left: 53px;\n    padding-right: 53px;\n    padding-bottom: 30px;\n  }\n  .u-block-3846-21 {\n    background-image: none;\n    margin-top: 98px;\n    margin-right: 18px;\n    margin-bottom: 0;\n    margin-left: 3px;\n  }\n  .u-block-3846-20 {\n    font-weight: 700;\n    margin-top: 0;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-3846-11 {\n    margin-top: 24px;\n    margin-right: 18px;\n    margin-bottom: 0;\n    margin-left: 3px;\n  }\n  .u-block-3846-19 {\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 1rem;\n    border-style: solid;\n    font-weight: 400;\n    margin-top: 54px;\n    margin-right: auto;\n    margin-bottom: 0;\n    margin-left: 3px;\n    padding-top: 20px;\n    padding-right: 47px;\n    padding-bottom: 20px;\n    padding-left: 46px;\n  }\n}</style>\n      <style data-mode=\"LG\" data-visited=\"true\">@media (max-width: 1199px) and (min-width: 992px) {\n  .u-block-3846-1 {\n    min-height: 593px;\n  }\n  .u-block-3846-17 {\n    background-image: none;\n    width: calc(((100% - 940px) / 2) + 588px);\n    left: auto;\n    right: 0;\n  }\n  .u-block-3846-3 {\n    width: 940px;\n    margin-top: 147px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: -42px;\n  }\n  .u-block-3846-4 {\n    min-height: 454px;\n  }\n  .u-block-3846-5 {\n    padding-top: 30px;\n    padding-right: 0;\n    padding-bottom: 30px;\n    padding-left: 30px;\n  }\n  .u-block-3846-8 {\n    width: 456px;\n    height: 420px;\n    margin-top: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    object-position: 50% 52.16%;\n    box-shadow: 5px 5px 20px 0 rgba(var(--black-r),var(--black-g),var(--black-b),0.4);\n    --radius: 40px;\n  }\n  .u-block-3846-6 {\n    background-image: none;\n    min-height: 627px;\n  }\n  .u-block-3846-7 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 40px;\n    padding-right: 40px;\n  }\n  .u-block-3846-21 {\n    margin-top: 98px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n    background-image: none;\n  }\n  .u-block-3846-20 {\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n    margin-right: 0;\n    font-weight: 700;\n  }\n  .u-block-3846-11 {\n    margin-top: 24px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-3846-19 {\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 1rem;\n    border-style: solid;\n    font-weight: 400;\n    margin-top: 54px;\n    margin-right: auto;\n    margin-bottom: 0;\n    margin-left: 0;\n    padding-top: 20px;\n    padding-right: 47px;\n    padding-bottom: 20px;\n    padding-left: 46px;\n  }\n}</style>\n      <style data-mode=\"MD\" data-visited=\"true\">@media (max-width: 991px) and (min-width: 768px) {\n  .u-block-3846-1 {\n    min-height: 685px;\n  }\n  .u-block-3846-17 {\n    background-image: none;\n    width: calc(((100% - 720px) / 2) + 450px);\n    left: auto;\n    right: 0;\n  }\n  .u-block-3846-3 {\n    width: 720px;\n    margin-top: 147px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: -42px;\n  }\n  .u-block-3846-4 {\n    min-height: 572px;\n  }\n  .u-block-3846-5 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-3846-8 {\n    height: 343px;\n    margin-top: 0;\n    margin-bottom: 0;\n    object-position: 50% 52.16%;\n    box-shadow: 5px 5px 20px 0 rgba(var(--black-r),var(--black-g),var(--black-b),0.4);\n    --radius: 40px;\n  }\n  .u-block-3846-6 {\n    background-image: none;\n    min-height: 100px;\n  }\n  .u-block-3846-7 {\n    padding-top: 30px;\n    padding-right: 30px;\n    padding-bottom: 30px;\n    padding-left: 30px;\n  }\n  .u-block-3846-21 {\n    margin-top: 98px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n    background-image: none;\n  }\n  .u-block-3846-20 {\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n    margin-right: 0;\n    font-weight: 700;\n  }\n  .u-block-3846-11 {\n    margin-top: 24px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-3846-19 {\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 1rem;\n    border-style: solid;\n    font-weight: 400;\n    margin-top: 54px;\n    margin-right: auto;\n    margin-bottom: 0;\n    margin-left: 0;\n    padding-top: 20px;\n    padding-right: 47px;\n    padding-bottom: 20px;\n    padding-left: 46px;\n  }\n}</style>\n      <style data-mode=\"SM\" data-visited=\"true\">@media (max-width: 767px) and (min-width: 576px) {\n  .u-block-3846-1 {\n    min-height: 1146px;\n  }\n  .u-block-3846-17 {\n    background-image: none;\n    height: 797px;\n    margin-top: 349px;\n    margin-bottom: 0;\n  }\n  .u-block-3846-3 {\n    width: 540px;\n    margin-top: -1090px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: -42px;\n  }\n  .u-block-3846-4 {\n    min-height: 514px;\n  }\n  .u-block-3846-5 {\n    padding-top: 30px;\n    padding-right: 0;\n    padding-bottom: 30px;\n    padding-left: 0;\n  }\n  .u-block-3846-8 {\n    height: 532px;\n    margin-top: 0;\n    margin-bottom: 0;\n    object-position: 50% 52.16%;\n    box-shadow: 5px 5px 20px 0 rgba(var(--black-r),var(--black-g),var(--black-b),0.4);\n    --radius: 40px;\n  }\n  .u-block-3846-6 {\n    background-image: none;\n    min-height: 100px;\n  }\n  .u-block-3846-7 {\n    padding-top: 30px;\n    padding-right: 10px;\n    padding-bottom: 30px;\n    padding-left: 10px;\n  }\n  .u-block-3846-21 {\n    margin-top: 98px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n    background-image: none;\n  }\n  .u-block-3846-20 {\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n    margin-right: 0;\n    font-weight: 700;\n  }\n  .u-block-3846-11 {\n    margin-top: 24px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-3846-19 {\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 1rem;\n    border-style: solid;\n    font-weight: 400;\n    margin-top: 54px;\n    margin-right: auto;\n    margin-bottom: 0;\n    margin-left: 0;\n    padding-top: 20px;\n    padding-right: 47px;\n    padding-bottom: 20px;\n    padding-left: 46px;\n  }\n}</style>\n      <style data-mode=\"XS\">@media (max-width: 575px) {\n  .u-block-3846-1 {\n    min-height: 777px;\n  }\n  .u-block-3846-17 {\n    background-image: none;\n    height: 797px;\n    margin-top: 349px;\n    margin-bottom: 0;\n  }\n  .u-block-3846-3 {\n    width: 340px;\n    margin-top: -1090px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: -42px;\n  }\n  .u-block-3846-4 {\n    min-height: 324px;\n  }\n  .u-block-3846-5 {\n    padding-top: 30px;\n    padding-right: 0;\n    padding-bottom: 30px;\n    padding-left: 0;\n  }\n  .u-block-3846-8 {\n    height: 335px;\n    margin-top: 0;\n    margin-bottom: 0;\n    object-position: 50% 52.16%;\n    box-shadow: 5px 5px 20px 0 rgba(var(--black-r),var(--black-g),var(--black-b),0.4);\n    --radius: 40px;\n  }\n  .u-block-3846-6 {\n    background-image: none;\n    min-height: 100px;\n  }\n  .u-block-3846-7 {\n    padding-top: 30px;\n    padding-right: 10px;\n    padding-bottom: 30px;\n    padding-left: 10px;\n  }\n  .u-block-3846-21 {\n    margin-top: 98px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n    background-image: none;\n  }\n  .u-block-3846-20 {\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n    margin-right: 0;\n    font-weight: 700;\n  }\n  .u-block-3846-11 {\n    margin-top: 24px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  .u-block-3846-19 {\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 1rem;\n    border-style: solid;\n    font-weight: 400;\n    margin-top: 54px;\n    margin-right: auto;\n    margin-bottom: 0;\n    margin-left: 0;\n    padding-top: 20px;\n    padding-right: 47px;\n    padding-bottom: 20px;\n    padding-left: 46px;\n  }\n}</style>\n    </section>\n    <section class=\"u-clearfix u-grey-5 u-valign-middle-lg u-valign-middle-md u-block-4746-1\" custom-posts-hash=\"[[I,T],[I,T],[I,T]]\" data-post-id=\"2300667477;2300667477;2300667477\" data-section-properties=\"{&quot;stretch&quot;:true}\" data-id=\"4746\" data-style=\"list-image-bg-3-cols\" id=\"sec-480f\" data-source=\"functional_fix\">\n      <style data-mode=\"XL\">@media (min-width: 1200px) {\n  .u-block-4746-1 {\n    min-height: 1320px;\n  }\n  .u-block-4746-65 {\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 0.3;\n    font-weight: 700;\n    margin-top: 155px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-4746-20 {\n    --animation-custom_in-translate_x: -300px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n    font-weight: 700;\n    margin-top: 15px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-4746-66 {\n    grid-template-rows: repeat(1, auto);\n    margin-top: 15px;\n    margin-bottom: 0;\n  }\n  .u-block-4746-67 {\n    grid-template-columns: repeat(3, calc(33.3333% - 20px));\n    min-height: 923px;\n    --gap: 30px;\n    grid-auto-columns: calc(33.3333% - 20px);\n  }\n  .u-block-4746-68 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-rdne-7348624.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-69 {\n    padding-top: 0;\n    padding-bottom: 0;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-4746-74 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-rdne-7348786.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-75 {\n    padding-top: 0;\n    padding-bottom: 0;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-4746-80 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-satoshi-1715547.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-81 {\n    padding-top: 0;\n    padding-bottom: 0;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .u-block-4746-82 {\n    --radius: 50px;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 0.875rem;\n    letter-spacing: 1px;\n    margin-top: 36px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 55px;\n  }\n}</style>\n      <style data-mode=\"LG\">@media (max-width: 1199px) and (min-width: 992px) {\n  .u-block-4746-1 {\n    min-height: 1320px;\n  }\n  .u-block-4746-65 {\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 0.3;\n    font-weight: 700;\n    margin-top: 155px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-4746-20 {\n    --animation-custom_in-translate_x: -300px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n    font-weight: 700;\n    margin-top: 15px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-4746-66 {\n    grid-template-rows: repeat(1, auto);\n    margin-top: 15px;\n    margin-bottom: 0;\n  }\n  .u-block-4746-67 {\n    grid-template-columns: repeat(3, calc(33.333333333333336% - 20px));\n    min-height: 761px;\n    --gap: 30px;\n    grid-auto-columns: calc(33.333333333333336% - 20px);\n  }\n  .u-block-4746-68 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-rdne-7348624.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-69 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-4746-74 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-rdne-7348786.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-75 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-4746-80 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-satoshi-1715547.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-81 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-4746-82 {\n    --radius: 50px;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 0.875rem;\n    letter-spacing: 1px;\n    margin-top: 36px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 55px;\n  }\n}</style>\n      <style data-mode=\"MD\">@media (max-width: 991px) and (min-width: 768px) {\n  .u-block-4746-1 {\n    min-height: 1320px;\n  }\n  .u-block-4746-65 {\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 0.3;\n    font-weight: 700;\n    margin-top: 155px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-4746-20 {\n    --animation-custom_in-translate_x: -300px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n    font-weight: 700;\n    margin-top: 15px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-4746-66 {\n    grid-template-rows: repeat(1, auto);\n    margin-top: 15px;\n    margin-bottom: 0;\n  }\n  .u-block-4746-67 {\n    grid-template-columns: repeat(2, calc(50% - 15px));\n    min-height: 1749px;\n    --gap: 30px;\n    grid-auto-columns: calc(50% - 15px);\n  }\n  .u-block-4746-68 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-rdne-7348624.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-69 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-4746-74 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-rdne-7348786.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-75 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-4746-80 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-satoshi-1715547.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-81 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-4746-82 {\n    --radius: 50px;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 0.875rem;\n    letter-spacing: 1px;\n    margin-top: 36px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 55px;\n  }\n}</style>\n      <style data-mode=\"SM\">@media (max-width: 767px) and (min-width: 576px) {\n  .u-block-4746-1 {\n    min-height: 1320px;\n  }\n  .u-block-4746-65 {\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 0.3;\n    font-weight: 700;\n    margin-top: 155px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-4746-20 {\n    --animation-custom_in-translate_x: -300px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n    font-weight: 700;\n    margin-top: 15px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-4746-66 {\n    grid-template-rows: repeat(1, auto);\n    margin-top: 15px;\n    margin-bottom: 0;\n  }\n  .u-block-4746-67 {\n    grid-template-columns: 100%;\n    min-height: 1749px;\n    --gap: 30px;\n    grid-auto-columns: calc(100% - 0px);\n  }\n  .u-block-4746-68 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-rdne-7348624.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-69 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-4746-74 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-rdne-7348786.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-75 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-4746-80 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-satoshi-1715547.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-81 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-4746-82 {\n    --radius: 50px;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 0.875rem;\n    letter-spacing: 1px;\n    margin-top: 36px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 55px;\n  }\n}</style>\n      <style data-mode=\"XS\">@media (max-width: 575px) {\n  .u-block-4746-1 {\n    min-height: 1320px;\n  }\n  .u-block-4746-65 {\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 0.3;\n    font-weight: 700;\n    margin-top: 155px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-4746-20 {\n    --animation-custom_in-translate_x: -300px;\n    --animation-custom_in-translate_y: 0px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n    font-weight: 700;\n    margin-top: 15px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n  }\n  .u-block-4746-66 {\n    grid-template-rows: repeat(1, auto);\n    margin-top: 15px;\n    margin-bottom: 0;\n  }\n  .u-block-4746-67 {\n    grid-template-columns: 100%;\n    min-height: 1749px;\n    --gap: 30px;\n    grid-auto-columns: 100%;\n  }\n  .u-block-4746-68 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-rdne-7348624.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-69 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-4746-74 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-rdne-7348786.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-75 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-4746-80 {\n    background-image: linear-gradient(0deg, rgba(var(--black-r), var(--black-g), var(--black-b), 0.25), rgba(var(--black-r), var(--black-g), var(--black-b), 0.25)), url('http://localhost/tours/wp-content/uploads/2025/06/pexels-satoshi-1715547.jpg');\n    background-position: 50% 50%;\n    --animation-custom_in-translate_x: 0px;\n    --animation-custom_in-translate_y: 300px;\n    --animation-custom_in-opacity: 0;\n    --animation-custom_in-rotate: 0deg;\n    --animation-custom_in-scale: 1;\n  }\n  .u-block-4746-81 {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n    padding-bottom: 0;\n  }\n  .u-block-4746-82 {\n    --radius: 50px;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 0.875rem;\n    letter-spacing: 1px;\n    margin-top: 36px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 55px;\n  }\n}</style>\n      <p class=\"u-align-center u-custom-font u-font-playfair-display u-text u-text-default u-text-palette-5-base u-block-4746-65\" data-animation-name=\"customAnimationIn\" data-animation-duration=\"1500\" data-animation-delay=\"500\" data-hover-preset-name=\"zoomIn\">MODERN &amp; BEAUTI<span style=\"font-weight: 700;\"><span style=\"font-weight: 500;\"><span style=\"font-weight: 500;\"></span></span></span>FUL \n      </p>\n      <h2 class=\"u-align-center u-custom-font u-font-playfair-display u-text u-text-default u-block-4746-20\" data-hover-preset-name=\"fadeIn\" data-animation-name=\"customAnimationIn\" data-animation-duration=\"1500\"> Our Most Popular Adventures </h2>\n      <div class=\"u-expanded-width u-layout-grid u-list u-block-4746-66\">\n        <div class=\"u-layout-spacing-all u-repeater u-block-4746-67\" data-key=\"rouded\">\n          <div class=\"u-container-style u-image u-list-item u-repeater-item u-shading u-block-4746-68\" data-image-width=\"4347\" data-image-height=\"6520\" data-brightness=\"\" data-hover-preset-name=\"fadeIn\" data-animation-name=\"customAnimationIn\" data-animation-duration=\"1500\" data-animation-delay=\"500\">\n            <div class=\"u-container-layout u-similar-container u-block-4746-69\">\n              \n            </div>\n          </div>\n          <div class=\"u-container-style u-image u-list-item u-repeater-item u-shading u-block-4746-74\" data-image-width=\"6481\" data-image-height=\"4321\" data-brightness=\"\" data-hover-preset-name=\"fadeIn\" data-animation-name=\"customAnimationIn\" data-animation-duration=\"1500\" data-animation-delay=\"500\">\n            <div class=\"u-container-layout u-similar-container u-block-4746-75\">\n              \n            </div>\n          </div>\n          <div class=\"u-container-style u-image u-list-item u-repeater-item u-shading u-block-4746-80\" data-image-width=\"3723\" data-image-height=\"3315\" data-brightness=\"\" data-hover-preset-name=\"fadeIn\" data-animation-name=\"customAnimationIn\" data-animation-duration=\"1500\" data-animation-delay=\"500\">\n            <div class=\"u-container-layout u-similar-container u-block-4746-81\">\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    <a href=\"http://localhost/tours/index.php/tour/\" class=\"u-btn u-btn-round u-button-style u-hover-palette-1-light-1 u-palette-1-base u-radius u-block-4746-82\">Find Tours</a></section>\n    <section class=\"u-align-center-lg u-align-center-md u-align-left-sm u-align-left-xs u-clearfix u-block-104b-1\" custom-posts-hash=\"[]\" data-style=\"blank\" data-section-properties=\"{&quot;margin&quot;:&quot;none&quot;,&quot;stretch&quot;:true}\" id=\"sec-0d57\" data-source=\"functional_fix\" data-id=\"104b\">\n      <div class=\"u-clearfix u-sheet u-valign-middle-lg u-valign-middle-xs u-block-104b-2\" data-height-lg=\"651\" data-height-md=\"581\" data-height-sm=\"1263\" data-height-xs=\"1871\">\n        \n        \n      <h2 class=\"u-custom-font u-font-oswald u-text u-text-grey-10 u-block-104b-5\">about&nbsp;<b>Travel</b>\n        </h2><div class=\"u-list u-block-104b-6\">\n          <div class=\"u-repeater u-block-104b-7\">\n            <div class=\"u-align-center u-container-align-center u-container-style u-list-item u-repeater-item u-block-104b-8\">\n              <div class=\"u-container-layout u-similar-container u-block-104b-9\">\n                <h3 class=\"u-custom-font u-font-oswald u-text u-block-104b-10\" data-animation-name=\"counter\" data-animation-event=\"scroll\" data-animation-duration=\"3000\">120+</h3>\n                <h6 class=\"u-custom-font u-font-oswald u-text u-text-default u-block-104b-11\">awesome Hikes </h6>\n              </div>\n            </div>\n            <div class=\"u-align-center u-container-align-center u-container-style u-list-item u-repeater-item u-block-104b-12\">\n              <div class=\"u-container-layout u-similar-container u-block-104b-13\">\n                <h3 class=\"u-custom-font u-font-oswald u-text u-text-default u-block-104b-14\" data-animation-name=\"counter\" data-animation-event=\"scroll\" data-animation-duration=\"3000\">90+</h3>\n                <h6 class=\"u-custom-font u-font-oswald u-text u-text-default u-block-104b-15\">Stunning places </h6>\n              </div>\n            </div>\n            <div class=\"u-align-center u-container-align-center u-container-style u-list-item u-repeater-item u-block-104b-16\">\n              <div class=\"u-container-layout u-similar-container u-block-104b-17\">\n                <h3 class=\"u-custom-font u-font-oswald u-text u-text-default u-block-104b-18\" data-animation-name=\"counter\" data-animation-event=\"scroll\" data-animation-duration=\"3000\">50<br>\n                </h3>\n                <h6 class=\"u-custom-font u-font-oswald u-text u-text-default u-block-104b-19\">Miles to Hike </h6>\n              </div>\n            </div>\n            <div class=\"u-align-center u-container-align-center u-container-style u-list-item u-repeater-item u-block-104b-20\">\n              <div class=\"u-container-layout u-similar-container u-block-104b-21\">\n                <h3 class=\"u-custom-font u-font-oswald u-text u-text-default u-block-104b-22\" data-animation-name=\"counter\" data-animation-event=\"scroll\" data-animation-duration=\"3000\">20+</h3>\n                <h6 class=\"u-custom-font u-font-oswald u-text u-text-default u-block-104b-23\">Years in service</h6>\n              </div>\n            </div>\n          </div>\n        </div></div>\n      <style data-mode=\"XL\" data-visited=\"true\">@media (min-width: 1200px) {\n  .u-block-104b-2 {\n    min-height: 392px;\n  }\n  .u-block-104b-5 {\n    text-transform: uppercase;\n    font-size: 12.5rem;\n    line-height: 1;\n    margin-top: 96px;\n    margin-right: -32px;\n    margin-bottom: 0;\n    margin-left: 0;\n  }\n  .u-block-104b-6 {\n    width: 1145px;\n    margin-top: -193px;\n    margin-left: -2px;\n    margin-right: -2px;\n    margin-bottom: 18px;\n  }\n  .u-block-104b-7 {\n    grid-auto-columns: calc(25% - 7.5px);\n    grid-template-columns: repeat(4, calc(25% - 7.5px));\n    --gap: 10px;\n    min-height: 271px;\n  }\n  .u-block-104b-9 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n  .u-block-104b-10 {\n    font-size: 6rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-11 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-13 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n  .u-block-104b-14 {\n    font-size: 6rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-15 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-17 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n  .u-block-104b-18 {\n    font-size: 6rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-19 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-21 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n  .u-block-104b-22 {\n    font-size: 6rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-23 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n}</style>\n      <style data-mode=\"LG\" data-visited=\"true\">@media (max-width: 1199px) and (min-width: 992px) {\n  .u-block-104b-2 {\n    min-height: 392px;\n  }\n  .u-block-104b-5 {\n    text-transform: uppercase;\n    font-size: 10rem;\n    line-height: 1;\n    margin-top: 96px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n  }\n  .u-block-104b-6 {\n    width: 940px;\n    margin-top: -193px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 18px;\n  }\n  .u-block-104b-7 {\n    grid-auto-columns: calc(25% - 7.5px);\n    grid-template-columns: repeat(4, calc(25% - 7.5px));\n    --gap: 10px;\n    min-height: 222px;\n  }\n  .u-block-104b-9 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n  .u-block-104b-10 {\n    font-size: 6rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-11 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-13 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n  .u-block-104b-14 {\n    font-size: 6rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-15 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-17 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n  .u-block-104b-18 {\n    font-size: 6rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-19 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-21 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n  .u-block-104b-22 {\n    font-size: 6rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-23 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n}</style>\n      <style data-mode=\"MD\" data-visited=\"true\">@media (max-width: 991px) and (min-width: 768px) {\n  .u-block-104b-2 {\n    min-height: 392px;\n  }\n  .u-block-104b-5 {\n    text-transform: uppercase;\n    font-size: 7.5rem;\n    line-height: 1;\n    margin-top: 96px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n  }\n  .u-block-104b-6 {\n    width: 720px;\n    margin-top: -193px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 18px;\n  }\n  .u-block-104b-7 {\n    grid-auto-columns: calc(50% - 5px);\n    grid-template-columns: repeat(2, calc(50% - 5px));\n    --gap: 10px;\n    min-height: 680px;\n  }\n  .u-block-104b-9 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n  .u-block-104b-10 {\n    font-size: 6rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-11 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-13 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n  .u-block-104b-14 {\n    font-size: 6rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-15 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-17 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n  .u-block-104b-18 {\n    font-size: 6rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-19 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-21 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n  .u-block-104b-22 {\n    font-size: 6rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-23 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n}</style>\n      <style data-mode=\"SM\" data-visited=\"true\">@media (max-width: 767px) and (min-width: 576px) {\n  .u-block-104b-2 {\n    min-height: 392px;\n  }\n  .u-block-104b-5 {\n    text-transform: uppercase;\n    font-size: 10.625rem;\n    line-height: 1;\n    margin-top: 96px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n  }\n  .u-block-104b-6 {\n    width: 540px;\n    margin-top: -193px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 18px;\n  }\n  .u-block-104b-7 {\n    grid-auto-columns: calc(100% - 0px);\n    grid-template-columns: 100%;\n    --gap: 10px;\n    min-height: 680px;\n  }\n  .u-block-104b-9 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  .u-block-104b-10 {\n    font-size: 5rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-11 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-13 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  .u-block-104b-14 {\n    font-size: 5rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-15 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-17 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  .u-block-104b-18 {\n    font-size: 5rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-19 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-21 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  .u-block-104b-22 {\n    font-size: 5rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-23 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n}</style>\n      <style data-mode=\"XS\" data-visited=\"true\">@media (max-width: 575px) {\n  .u-block-104b-2 {\n    min-height: 392px;\n  }\n  .u-block-104b-5 {\n    text-transform: uppercase;\n    font-size: 6.25rem;\n    line-height: 1;\n    margin-top: 60px;\n    margin-right: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n  }\n  .u-block-104b-6 {\n    width: 340px;\n    margin-top: -193px;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 18px;\n  }\n  .u-block-104b-7 {\n    grid-auto-columns: 100%;\n    grid-template-columns: 100%;\n    --gap: 10px;\n    min-height: 680px;\n  }\n  .u-block-104b-9 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  .u-block-104b-10 {\n    font-size: 4rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-11 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-13 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  .u-block-104b-14 {\n    font-size: 4rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-15 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-17 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  .u-block-104b-18 {\n    font-size: 4rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-19 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n  .u-block-104b-21 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  .u-block-104b-22 {\n    font-size: 4rem;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .u-block-104b-23 {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n}</style>\n    </section>\n    \n    \n  \n</body></html>","publishHtml":"\n    \n    <section class=\"u-align-left u-clearfix u-container-align-left u-gradient u-image u-section-2\" id=\"block-4\" data-image-width=\"4672\" data-image-height=\"7008\" style=\"background-image: linear-gradient(rgba(230, 140, 81, 0.5), rgba(42, 64, 94, 0.5)), url(&quot;http://localhost/tours/wp-content/uploads/2025/06/pexels-santesson89-30970621.jpg&quot;);\">\n      <div class=\"u-clearfix u-sheet u-valign-middle-lg u-valign-middle-md u-valign-middle-sm u-valign-middle-xs u-sheet-1\">\n        <h1 class=\"u-align-left u-custom-font u-text u-text-default u-text-palette-4-light-3 u-title u-text-1\"> Explore the Japan with Us</h1>\n        <p class=\"u-align-left u-large-text u-text u-text-palette-4-light-3 u-text-variant u-text-2\"> &nbsp; Find your dream destination</p>\n        <div class=\"custom-expanded u-border-3 u-border-grey-40 u-container-style u-group u-group-1\">\n          <div class=\"u-container-layout u-container-layout-1\">\n            <div class=\"u-clearfix u-custom-html u-expanded-width u-custom-html-1\">[tours_list_filtered] </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <section class=\"u-clearfix u-container-align-center u-custom-color-2 u-section-3\" id=\"sec-0985\">\n      <div class=\"u-clearfix u-sheet u-valign-middle-lg u-valign-middle-md u-valign-middle-sm u-valign-middle-xs u-sheet-1\">\n        <p class=\"u-align-center u-custom-font u-font-playfair-display u-text u-text-default u-text-palette-5-light-1 u-text-1\">Name Specials</p>\n        <h2 class=\"u-align-center u-custom-font u-font-playfair-display u-text u-text-default u-text-2\" data-animation-name=\"customAnimationIn\" data-animation-duration=\"1500\" data-animation-delay=\"0\"> Why Travel with Name?</h2>\n        <div class=\"u-expanded-width u-list u-list-1\">\n          <div class=\"u-repeater u-repeater-1\">\n            <div class=\"u-align-center u-border-2 u-border-grey-75 u-container-align-center u-container-style u-list-item u-radius u-repeater-item u-shape-round u-white u-list-item-1\" data-animation-name=\"flipIn\" data-animation-duration=\"1500\" data-animation-direction=\"X\" data-animation-delay=\"500\">\n              <div class=\"u-container-layout u-similar-container u-valign-top-lg u-valign-top-md u-valign-top-sm u-valign-top-xs u-container-layout-1\">\n                <img class=\"u-expanded-width u-image u-image-round u-radius u-image-1\" src=\"http://localhost/tours/wp-content/uploads/2025/06/pexels-njeromin-32649679.jpg\" data-image-width=\"3627\" data-image-height=\"5548\">\n                <h4 class=\"u-custom-font u-font-georgia u-text u-text-3\">2000 + Our Guide </h4>\n              </div>\n            </div>\n            <div class=\"u-align-center u-border-2 u-border-grey-75 u-container-align-center u-container-style u-list-item u-radius u-repeater-item u-shape-round u-white u-list-item-2\" data-animation-name=\"flipIn\" data-animation-duration=\"1500\" data-animation-direction=\"X\" data-animation-delay=\"500\">\n              <div class=\"u-container-layout u-similar-container u-valign-top-lg u-valign-top-md u-valign-top-sm u-valign-top-xs u-container-layout-2\">\n                <img class=\"u-expanded-width u-image u-image-round u-radius u-image-2\" src=\"http://localhost/tours/wp-content/uploads/2025/06/pexels-d-ng-nhan-324384-29914717.jpg\" data-image-width=\"3258\" data-image-height=\"4895\">\n                <h4 class=\"u-custom-font u-font-georgia u-text u-text-4\">100 Users Trusted Tour Agency </h4>\n              </div>\n            </div>\n            <div class=\"u-align-center u-border-2 u-border-grey-75 u-container-align-center u-container-style u-list-item u-radius u-repeater-item u-shape-round u-white u-list-item-3\" data-animation-name=\"flipIn\" data-animation-duration=\"1500\" data-animation-direction=\"X\" data-animation-delay=\"500\">\n              <div class=\"u-container-layout u-similar-container u-valign-top-lg u-valign-top-md u-valign-top-sm u-valign-top-xs u-container-layout-3\">\n                <img class=\"u-expanded-width u-image u-image-round u-radius u-image-3\" src=\"http://localhost/tours/wp-content/uploads/2025/06/pexels-d-ng-nhan-324384-29914687.jpg\" data-image-width=\"3280\" data-image-height=\"4928\">\n                <h4 class=\"u-custom-font u-font-georgia u-text u-text-5\">20 + years of Travel Experince</h4>\n              </div>\n            </div>\n            <div class=\"u-align-center u-border-2 u-border-grey-75 u-container-align-center u-container-style u-list-item u-radius u-repeater-item u-shape-round u-white u-list-item-4\" data-animation-name=\"flipIn\" data-animation-duration=\"1500\" data-animation-direction=\"X\" data-animation-delay=\"500\">\n              <div class=\"u-container-layout u-similar-container u-valign-top-lg u-valign-top-md u-valign-top-sm u-valign-top-xs u-container-layout-4\">\n                <img class=\"u-expanded-width u-image u-image-round u-radius u-image-4\" src=\"http://localhost/tours/wp-content/uploads/2025/06/pexels-d-ng-nhan-324384-29914707.jpg\" data-image-width=\"3280\" data-image-height=\"4928\">\n                <h4 class=\"u-custom-font u-font-georgia u-text u-text-6\">100 of our Travelers are Happy</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <section class=\"u-clearfix u-section-4\" id=\"sec-f9dd\">\n      <div class=\"u-expanded-height-lg u-expanded-height-md u-expanded-height-xl u-expanded-width-sm u-expanded-width-xs u-palette-2-base u-shape u-shape-rectangle u-shape-1\"></div>\n      <div class=\"data-layout-selected u-clearfix u-layout-wrap u-layout-wrap-1\">\n        <div class=\"u-layout\">\n          <div class=\"u-layout-row\">\n            <div class=\"u-container-style u-layout-cell u-left-cell u-size-31 u-layout-cell-1\">\n              <div class=\"u-container-layout u-valign-middle u-container-layout-1\">\n                <img src=\"http://localhost/tours/wp-content/uploads/2025/06/pexels-taryn-elliott-4340785.jpg\" alt=\"\" class=\"u-expanded-width-md u-expanded-width-sm u-expanded-width-xs u-image u-image-round u-radius u-image-1\" data-image-width=\"3836\" data-image-height=\"2557\">\n              </div>\n            </div>\n            <div class=\"u-align-left u-container-align-left u-container-style u-layout-cell u-palette-2-base u-right-cell u-size-29 u-layout-cell-2\">\n              <div class=\"u-container-layout u-valign-middle-lg u-valign-middle-md u-valign-middle-sm u-valign-middle-xs u-container-layout-2\">\n                <p class=\"u-custom-font u-font-playfair-display u-text u-text-palette-5-light-1 u-text-1\">ABOUT TRAVIO </p>\n                <h2 class=\"u-text u-text-default u-text-2\">Japan Best Travel Agency Company Since 2025.&nbsp;</h2>\n                <p class=\"u-text u-text-3\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim.<br>\n                  <br>\n                  <br>\n                  <br>\n                </p>\n                <a href=\"#\" class=\"u-active-palette-2-light-1 u-border-3 u-border-active-palette-2-light-1 u-border-hover-palette-2-light-1 u-border-white u-btn u-btn-round u-button-style u-hover-palette-2-light-1 u-none u-radius-50 u-text-active-white u-text-body-alt-color u-text-hover-white u-btn-1\">Find&nbsp; tours </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <section class=\"u-clearfix u-grey-5 u-valign-middle-lg u-valign-middle-md u-section-5\" id=\"sec-480f\">\n      <p class=\"u-align-center u-custom-font u-font-playfair-display u-text u-text-default u-text-palette-5-base u-text-1\" data-animation-name=\"customAnimationIn\" data-animation-duration=\"1500\" data-animation-delay=\"500\">MODERN &amp; BEAUTI<span style=\"font-weight: 700;\"><span style=\"font-weight: 500;\"><span style=\"font-weight: 500;\"></span></span></span>FUL \n      </p>\n      <h2 class=\"u-align-center u-custom-font u-font-playfair-display u-text u-text-default u-text-2\" data-animation-name=\"customAnimationIn\" data-animation-duration=\"1500\"> Our Most Popular Adventures </h2>\n      <div class=\"u-expanded-width u-layout-grid u-list u-list-1\">\n        <div class=\"u-layout-spacing-all u-repeater u-repeater-1\">\n          <div class=\"u-container-style u-image u-list-item u-repeater-item u-shading u-image-1\" data-image-width=\"4347\" data-image-height=\"6520\" data-animation-name=\"customAnimationIn\" data-animation-duration=\"1500\" data-animation-delay=\"500\" style=\"background-image: linear-gradient(0deg, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.25)), url(&quot;http://localhost/tours/wp-content/uploads/2025/06/pexels-rdne-7348624.jpg&quot;);\">\n            <div class=\"u-container-layout u-similar-container u-container-layout-1\"></div>\n          </div>\n          <div class=\"u-container-style u-image u-list-item u-repeater-item u-shading u-image-2\" data-image-width=\"6481\" data-image-height=\"4321\" data-animation-name=\"customAnimationIn\" data-animation-duration=\"1500\" data-animation-delay=\"500\" style=\"background-image: linear-gradient(0deg, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.25)), url(&quot;http://localhost/tours/wp-content/uploads/2025/06/pexels-rdne-7348786.jpg&quot;);\">\n            <div class=\"u-container-layout u-similar-container u-container-layout-2\"></div>\n          </div>\n          <div class=\"u-container-style u-image u-list-item u-repeater-item u-shading u-image-3\" data-image-width=\"3723\" data-image-height=\"3315\" data-animation-name=\"customAnimationIn\" data-animation-duration=\"1500\" data-animation-delay=\"500\" style=\"background-image: linear-gradient(0deg, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.25)), url(&quot;http://localhost/tours/wp-content/uploads/2025/06/pexels-satoshi-1715547.jpg&quot;);\">\n            <div class=\"u-container-layout u-similar-container u-container-layout-3\"></div>\n          </div>\n        </div>\n      </div>\n      <a href=\"http://localhost/tours/index.php/tour/\" class=\"u-btn u-btn-round u-button-style u-hover-palette-1-light-1 u-palette-1-base u-radius u-btn-1\">Find Tours</a>\n    </section>\n    <section class=\"u-align-center-lg u-align-center-md u-align-left-sm u-align-left-xs u-clearfix u-section-6\" id=\"sec-0d57\">\n      <div class=\"u-clearfix u-sheet u-valign-middle-lg u-valign-middle-xs u-sheet-1\">\n        <h2 class=\"u-custom-font u-font-oswald u-text u-text-grey-10 u-text-1\">about&nbsp;<b>Travel</b>\n        </h2>\n        <div class=\"u-list u-list-1\">\n          <div class=\"u-repeater u-repeater-1\">\n            <div class=\"u-align-center u-container-align-center u-container-style u-list-item u-repeater-item\">\n              <div class=\"u-container-layout u-similar-container u-container-layout-1\">\n                <h3 class=\"u-custom-font u-font-oswald u-text u-text-2\" data-animation-name=\"counter\" data-animation-event=\"scroll\" data-animation-duration=\"3000\">120+</h3>\n                <h6 class=\"u-custom-font u-font-oswald u-text u-text-default u-text-3\">awesome Hikes </h6>\n              </div>\n            </div>\n            <div class=\"u-align-center u-container-align-center u-container-style u-list-item u-repeater-item\">\n              <div class=\"u-container-layout u-similar-container u-container-layout-2\">\n                <h3 class=\"u-custom-font u-font-oswald u-text u-text-default u-text-4\" data-animation-name=\"counter\" data-animation-event=\"scroll\" data-animation-duration=\"3000\">90+</h3>\n                <h6 class=\"u-custom-font u-font-oswald u-text u-text-default u-text-5\">Stunning places </h6>\n              </div>\n            </div>\n            <div class=\"u-align-center u-container-align-center u-container-style u-list-item u-repeater-item\">\n              <div class=\"u-container-layout u-similar-container u-container-layout-3\">\n                <h3 class=\"u-custom-font u-font-oswald u-text u-text-default u-text-6\" data-animation-name=\"counter\" data-animation-event=\"scroll\" data-animation-duration=\"3000\">50<br>\n                </h3>\n                <h6 class=\"u-custom-font u-font-oswald u-text u-text-default u-text-7\">Miles to Hike </h6>\n              </div>\n            </div>\n            <div class=\"u-align-center u-container-align-center u-container-style u-list-item u-repeater-item\">\n              <div class=\"u-container-layout u-similar-container u-container-layout-4\">\n                <h3 class=\"u-custom-font u-font-oswald u-text u-text-default u-text-8\" data-animation-name=\"counter\" data-animation-event=\"scroll\" data-animation-duration=\"3000\">20+</h3>\n                <h6 class=\"u-custom-font u-font-oswald u-text u-text-default u-text-9\">Years in service</h6>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    \n    \n    \n    \n  \n","publishHtmlTranslations":{},"backlink":"<section class=\"u-backlink u-clearfix u-grey-80\"> This website was created with <a href=\"https://nicepage.com\">Nicepage</a>\n    </section>","head":" .u-section-2 {\n  background-image: ;\n  background-position: 50% 50%, 50% 50%;\n  background-size: cover, cover;\n  background-repeat: no-repeat, no-repeat;\n}\n.u-section-2 .u-sheet-1 {\n  min-height: 800px;\n}\n.u-section-2 .u-text-1 {\n  font-family: Poppins;\n  font-size: 5rem;\n  font-weight: 700;\n  margin: 268px 16px 0 auto;\n}\n.u-section-2 .u-text-2 {\n  font-size: 1.875rem;\n  margin: 20px 285px 0 57px;\n}\n.u-section-2 .u-group-1 {\n  width: 1026px;\n  min-height: 99px;\n  height: auto;\n  margin: 27px auto 60px;\n}\n.u-section-2 .u-container-layout-1 {\n  padding-left: 0;\n  padding-right: 0;\n}\n.u-section-2 .u-custom-html-1 {\n  margin-bottom: 0;\n  margin-top: 0;\n}\n/*RESPONSIVE_MEDIA*/\n@media (max-width: 1199px) {\n  .u-section-2 .u-sheet-1 {\n    min-height: 660px;\n  }\n  .u-section-2 .u-text-1 {\n    font-size: 4.5rem;\n    margin-top: 60px;\n  }\n  .u-section-2 .u-text-2 {\n    margin-right: 142px;\n    margin-left: 0;\n  }\n  .u-section-2 .u-group-1 {\n    width: 940px;\n    height: auto;\n  }\n  .u-section-2 .u-container-layout-1 {\n    padding-top: 30px;\n    padding-bottom: 30px;\n  }\n}\n/*/RESPONSIVE_MEDIA*/\n/*RESPONSIVE_CLASS*/\n.u-lg .u-section-2 .u-sheet-1 {\n  min-height: 660px;\n}\n.u-lg .u-section-2 .u-text-1 {\n  font-size: 4.5rem;\n  margin-top: 60px;\n}\n.u-lg .u-section-2 .u-text-2 {\n  margin-right: 142px;\n  margin-left: 0;\n}\n.u-lg .u-section-2 .u-group-1 {\n  width: 940px;\n  height: auto;\n}\n.u-lg .u-section-2 .u-container-layout-1 {\n  padding-top: 30px;\n  padding-bottom: 30px;\n}\n/*/RESPONSIVE_CLASS*/\n/*RESPONSIVE_MEDIA*/\n@media (max-width: 991px) {\n  .u-section-2 .u-sheet-1 {\n    min-height: 506px;\n  }\n  .u-section-2 .u-text-2 {\n    margin-right: 0;\n  }\n  .u-section-2 .u-group-1 {\n    width: 720px;\n  }\n  .u-section-2 .u-container-layout-1 {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n/*/RESPONSIVE_MEDIA*/\n/*RESPONSIVE_CLASS*/\n.u-md .u-section-2 .u-sheet-1 {\n  min-height: 506px;\n}\n.u-md .u-section-2 .u-text-2 {\n  margin-right: 0;\n}\n.u-md .u-section-2 .u-group-1 {\n  width: 720px;\n}\n.u-md .u-section-2 .u-container-layout-1 {\n  padding-left: 0;\n  padding-right: 0;\n}\n/*/RESPONSIVE_CLASS*/\n/*RESPONSIVE_MEDIA*/\n@media (max-width: 767px) {\n  .u-section-2 .u-sheet-1 {\n    min-height: 380px;\n  }\n  .u-section-2 .u-text-1 {\n    font-size: 3.75rem;\n  }\n  .u-section-2 .u-group-1 {\n    width: 540px;\n  }\n}\n/*/RESPONSIVE_MEDIA*/\n/*RESPONSIVE_CLASS*/\n.u-sm .u-section-2 .u-sheet-1 {\n  min-height: 380px;\n}\n.u-sm .u-section-2 .u-text-1 {\n  font-size: 3.75rem;\n}\n.u-sm .u-section-2 .u-group-1 {\n  width: 540px;\n}\n/*/RESPONSIVE_CLASS*/\n/*RESPONSIVE_MEDIA*/\n@media (max-width: 575px) {\n  .u-section-2 .u-sheet-1 {\n    min-height: 239px;\n  }\n  .u-section-2 .u-text-1 {\n    font-size: 3rem;\n  }\n  .u-section-2 .u-group-1 {\n    width: 340px;\n  }\n}\n/*/RESPONSIVE_MEDIA*/\n/*RESPONSIVE_CLASS*/\n.u-xs .u-section-2 .u-sheet-1 {\n  min-height: 239px;\n}\n.u-xs .u-section-2 .u-text-1 {\n  font-size: 3rem;\n}\n.u-xs .u-section-2 .u-group-1 {\n  width: 340px;\n}\n/*/RESPONSIVE_CLASS*/\n.u-section-3 .u-sheet-1 {\n  min-height: 746px;\n}\n.u-section-3 .u-text-1 {\n  text-transform: uppercase;\n  margin: 69px auto 0;\n}\n.u-section-3 .u-text-2 {\n  --animation-custom_in-translate_x: 0px;\n  --animation-custom_in-translate_y: 0px;\n  --animation-custom_in-opacity: 0;\n  --animation-custom_in-rotate: 0deg;\n  --animation-custom_in-scale: 0.3;\n  font-weight: 700;\n  margin: 8px auto 0;\n}\n.u-section-3 .u-list-1 {\n  margin-top: 62px;\n  margin-bottom: 60px;\n  grid-template-rows: repeat(1, auto);\n}\n.u-section-3 .u-repeater-1 {\n  grid-template-columns: repeat(4, calc(25% - 20.25px));\n  min-height: 420px;\n  grid-auto-columns: calc(25% - 20.25px);\n  --gap: 27px;\n}\n.u-section-3 .u-list-item-1 {\n  --radius: 25px;\n  background-image: none;\n}\n.u-section-3 .u-container-layout-1 {\n  padding: 0;\n}\n.u-section-3 .u-image-1 {\n  height: 308px;\n  margin-top: 0;\n  margin-bottom: 0;\n  --top-left-radius: 50px;\n  --top-right-radius: 50px;\n  filter: brightness(0.9);\n}\n.u-section-3 .u-text-3 {\n  font-size: 1.25rem;\n  font-weight: 700;\n  margin: 30px 20px 0;\n}\n.u-section-3 .u-list-item-2 {\n  --radius: 25px;\n  background-image: none;\n}\n.u-section-3 .u-container-layout-2 {\n  padding: 0;\n}\n.u-section-3 .u-image-2 {\n  height: 308px;\n  margin-top: 0;\n  margin-bottom: 0;\n  --top-left-radius: 50px;\n  --top-right-radius: 50px;\n  filter: brightness(0.9);\n}\n.u-section-3 .u-text-4 {\n  font-size: 1.25rem;\n  font-weight: 700;\n  margin: 30px 20px 0;\n}\n.u-section-3 .u-list-item-3 {\n  --radius: 25px;\n  background-image: none;\n}\n.u-section-3 .u-container-layout-3 {\n  padding: 0;\n}\n.u-section-3 .u-image-3 {\n  height: 308px;\n  margin-top: 0;\n  margin-bottom: 0;\n  --top-left-radius: 50px;\n  --top-right-radius: 50px;\n  filter: brightness(0.9);\n}\n.u-section-3 .u-text-5 {\n  font-size: 1.25rem;\n  font-weight: 700;\n  margin: 30px 20px 0;\n}\n.u-section-3 .u-list-item-4 {\n  --radius: 25px;\n  background-image: none;\n}\n.u-section-3 .u-container-layout-4 {\n  padding: 0;\n}\n.u-section-3 .u-image-4 {\n  height: 308px;\n  margin-top: 0;\n  margin-bottom: 0;\n  --top-left-radius: 50px;\n  --top-right-radius: 50px;\n  filter: brightness(0.9);\n}\n.u-section-3 .u-text-6 {\n  font-size: 1.25rem;\n  font-weight: 700;\n  margin: 30px 20px 0;\n}\n/*RESPONSIVE_MEDIA*/\n@media (max-width: 1199px) {\n  .u-section-3 .u-text-1 {\n    margin-top: 162px;\n  }\n  .u-section-3 .u-text-2 {\n    margin-top: -28px;\n  }\n  .u-section-3 .u-repeater-1 {\n    grid-gap: 27px;\n    min-height: 346px;\n  }\n  .u-section-3 .u-image-1 {\n    height: 254px;\n  }\n  .u-section-3 .u-text-3 {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .u-section-3 .u-image-2 {\n    height: 254px;\n  }\n  .u-section-3 .u-text-4 {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .u-section-3 .u-image-3 {\n    height: 254px;\n  }\n  .u-section-3 .u-text-5 {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .u-section-3 .u-image-4 {\n    height: 254px;\n  }\n  .u-section-3 .u-text-6 {\n    margin-left: 0;\n    margin-right: 0;\n  }\n}\n/*/RESPONSIVE_MEDIA*/\n/*RESPONSIVE_CLASS*/\n.u-lg .u-section-3 .u-text-1 {\n  margin-top: 162px;\n}\n.u-lg .u-section-3 .u-text-2 {\n  margin-top: -28px;\n}\n.u-lg .u-section-3 .u-repeater-1 {\n  grid-gap: 27px;\n  min-height: 346px;\n}\n.u-lg .u-section-3 .u-image-1 {\n  height: 254px;\n}\n.u-lg .u-section-3 .u-text-3 {\n  margin-left: 0;\n  margin-right: 0;\n}\n.u-lg .u-section-3 .u-image-2 {\n  height: 254px;\n}\n.u-lg .u-section-3 .u-text-4 {\n  margin-left: 0;\n  margin-right: 0;\n}\n.u-lg .u-section-3 .u-image-3 {\n  height: 254px;\n}\n.u-lg .u-section-3 .u-text-5 {\n  margin-left: 0;\n  margin-right: 0;\n}\n.u-lg .u-section-3 .u-image-4 {\n  height: 254px;\n}\n.u-lg .u-section-3 .u-text-6 {\n  margin-left: 0;\n  margin-right: 0;\n}\n/*/RESPONSIVE_CLASS*/\n/*RESPONSIVE_MEDIA*/\n@media (max-width: 991px) {\n  .u-section-3 .u-text-1 {\n    margin-top: 69px;\n  }\n  .u-section-3 .u-text-2 {\n    margin-top: 40px;\n  }\n  .u-section-3 .u-repeater-1 {\n    grid-template-columns: repeat(2, calc(50% - 13.5px));\n    grid-auto-columns: calc(50% - 13.5px);\n    min-height: 1060px;\n  }\n  .u-section-3 .u-container-layout-1 {\n    padding: 0;\n  }\n  .u-section-3 .u-image-1 {\n    height: 389px;\n  }\n  .u-section-3 .u-container-layout-2 {\n    padding: 0;\n  }\n  .u-section-3 .u-image-2 {\n    height: 389px;\n  }\n  .u-section-3 .u-container-layout-3 {\n    padding: 0;\n  }\n  .u-section-3 .u-image-3 {\n    height: 389px;\n  }\n  .u-section-3 .u-container-layout-4 {\n    padding: 0;\n  }\n  .u-section-3 .u-image-4 {\n    height: 389px;\n  }\n}\n/*/RESPONSIVE_MEDIA*/\n/*RESPONSIVE_CLASS*/\n.u-md .u-section-3 .u-text-1 {\n  margin-top: 69px;\n}\n.u-md .u-section-3 .u-text-2 {\n  margin-top: 40px;\n}\n.u-md .u-section-3 .u-repeater-1 {\n  grid-template-columns: repeat(2, calc(50% - 13.5px));\n  grid-auto-columns: calc(50% - 13.5px);\n  min-height: 1060px;\n}\n.u-md .u-section-3 .u-container-layout-1 {\n  padding: 0;\n}\n.u-md .u-section-3 .u-image-1 {\n  height: 389px;\n}\n.u-md .u-section-3 .u-container-layout-2 {\n  padding: 0;\n}\n.u-md .u-section-3 .u-image-2 {\n  height: 389px;\n}\n.u-md .u-section-3 .u-container-layout-3 {\n  padding: 0;\n}\n.u-md .u-section-3 .u-image-3 {\n  height: 389px;\n}\n.u-md .u-section-3 .u-container-layout-4 {\n  padding: 0;\n}\n.u-md .u-section-3 .u-image-4 {\n  height: 389px;\n}\n/*/RESPONSIVE_CLASS*/\n/*RESPONSIVE_MEDIA*/\n@media (max-width: 767px) {\n  .u-section-3 .u-text-1 {\